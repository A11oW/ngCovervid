angular.module("ngCovervid",[]).directive("covervid",["$window","$timeout",function(a,b){return{replace:!0,restrict:"EA",scope:{height:"@",width:"@"},template:"<video ng-transclude></video>",transclude:!0,link:function(c,d,e){function f(a,c){var d=null;return function(){var e=this,f=arguments;b.cancel(d),d=b(function(){a.apply(e,f)},c)}}function g(){var a=h[0].offsetHeight,b=h[0].offsetWidth,c=i,e=j,f=a/c,g=b/e;g>f?(d.css("height","auto"),d.css("width",b+"px")):(d.css("height",a+"px"),d.css("width","auto"))}var h=d.parent(),i=parseInt(c.height),j=parseInt(c.width);void 0!==c.height&&isNaN(i)&&console.error("Error: [covervid] 'height' provided is not a number. Found '"+c.height+"'. Using native height of video."),void 0!==c.width&&isNaN(j)&&console.error("Error: [covervid] 'width' provided is not a number. Found '"+c.width+"'. Using native width of video."),angular.element(a).bind("resize",function(){f(g(),50)}),d.css("position","absolute"),d.css("top","50%"),d.css("left","50%"),d.css("-webkit-transform","translate(-50%, -50%)"),d.css("-ms-transform","translate(-50%, -50%)"),d.css("transform","translate(-50%, -50%)"),h.css("overflow","hidden"),isNaN(j)||isNaN(i)?d.bind("loadedmetadata",function(){j=d[0].videoWidth,i=d[0].videoHeight,g()}):g()}}}]);